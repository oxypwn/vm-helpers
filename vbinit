# -*- mode: sh -*-
#!/bin/bash
#set -x
# vm-helper creates vms fast by both handling downloading of isos and letting each vm has it own template.	
# Copyright (C) <2012>  <Paul Andrew Liljenberg>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.				
#								
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of	
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	
# GNU General Public License for more details.		
#						
# You should have received a copy of the GNU General Public License	
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# The following code is built upon
# https://github.com/ajclark/preseed/blob/master/build-vm.sh

# Paths
#machines=${XDG_CONFIG_HOME:-$HOME/.config}/vbinit/machines
machines=$HOME/Dropbox/vm-helpers/vbmachines
iso_local_root=/tmp
img_local_root=$HOME/.Virtualbox



EXPORT_PATH=$HOME
IMPORT_PATH=$EXPORT_PATH
LOG=/tmp/build-vm.log
ERRORS=/tmp/build-vm.errors




function download_iso()
{
while [ ! -e $iso_local_root/$iso_name ]; do
    /usr/bin/curl -fL $iso_remote_root/$iso_name -o $iso_local_root/$iso_name
done
}


function create()
{
# Create VM, set boot order
VBoxManage createvm --basefolder "$img_local_root" --name "$name" --ostype "$ostype" --register  1>> $LOG 2>> $ERRORS
VBoxManage modifyvm "$name" --memory "$mem" --boot1 dvd --cpus 1  1>> $LOG 2>> $ERRORS

# setup first DHCP enabled interface, depends on hostname
if [ "`hostname -s`" = stewie ]; then
    VBoxManage modifyvm "$name" --nic1 bridged --bridgeadapter1 "enp1s0" --nictype1 82540EM --cableconnected1 on
else
    VBoxManage modifyvm "$name" --nic1 bridged --bridgeadapter1 "p4p1" --nictype1 82540EM --cableconnected1 on
fi

# setup other interfaces
VBoxManage modifyvm "$name" --nic2 intnet --nictype2 82540EM --cableconnected2 on
VBoxManage modifyvm "$name" --nic3 intnet --nictype2 82540EM --cableconnected3 on

# Add hard disk
VBoxManage storagectl "$name" --name "SATA Controller" --add sata  1>> $LOG 2>> $ERRORS
VBoxManage createhd --filename "$img_local_root"/"$name"/"${name}"_hdd.vdi --size 51200  1>> $LOG 2>> $ERRORS
VBoxManage storageattach "$name" --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium "$img_local_root"/"$name"/"${name}"_hdd.vdi  1>> $LOG 2>> $ERRORS

# Add DVD-ROM
VBoxManage storagectl "$name" --name "IDE Controller" --add ide  1>> $LOG 2>> $ERRORS
VBoxManage storageattach "$name" --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium "$iso_local_root"/"$iso_name"  1>> $LOG 2>> $ERRORS

VBoxManage startvm "$name" || ( VBoxManage controlvm "$name" poweroff && sleep 2 && VBoxManage unregistervm "$name" --delete  )
}

if [ -z $1 ]; then
    . "$machines"
else    
    . "$1"
fi

for runall in `compgen -A function -- vm`
do
    $runall
done


